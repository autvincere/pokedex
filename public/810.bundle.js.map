{"version":3,"sources":["webpack://pokev2/./src/components/Search.jsx"],"names":["useStyles","makeStyles","theme","root","marginButtonRight","marginRight","Button","width","containerButtons","display","marginBottom","classes","dispatch","useDispatch","selectedPokemon","useSelector","state","pokemones","useEffect","getPokemonsAction","className","container","spacing","direction","justify","alignItems","alignContent","length","map","item","key","uuid","name","image","id","data","types"],"mappings":"8LAeMA,GAAYC,QAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,GAINC,kBAAmB,CACdC,YAAa,QAElBC,OAAQ,CACHC,MAAO,SAEZC,iBAAkB,CACbC,QAAS,QACTF,MAAO,OACPG,aAAc,YAkExB,UA5De,WACV,IAAMC,EAAUX,IACVY,GAAWC,UACXC,GAAkBC,SAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,mBAc7D,OAPAI,gBAAU,WAEAN,GAASO,aAGhB,CAACP,IAGC,gBAAC,IAAD,CACAQ,UAAWT,EAAQR,KACnBkB,WAAS,EACTC,QAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,SACXC,aAAa,UAKQZ,EAAgBa,OAGPb,EAAgBc,KAAI,SAAAC,GAAI,OACnB,gBAAC,IAAD,CACKC,IAAKC,MACLC,KAAMH,EAAKG,KACXC,MAAOJ,EAAKI,MACZC,GAAIL,EAAKK,GACTC,KAAMN,EAAKM,KACXC,MAAOP,EAAKO,WAT3B","file":"810.bundle.js","sourcesContent":["import React,{useEffect} from 'react'\nimport uuid from \"react-uuid\";\nimport {\n     getPokemonsAction,\n} from '../actions/poke'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n     Grid,\n} from '@material-ui/core'\nimport Pokemon from './Pokemon';\n// import Loader from './Loader';\n// import Error from './Error';\n\nconst useStyles = makeStyles((theme) => ({\n     root: {\n          // flexGrow: 1,\n          // overflow: 'hidden',\n     },\n     marginButtonRight: {\n          marginRight: '20px'\n     },\n     Button: {\n          width: '120px',\n     },\n     containerButtons: {\n          display: 'block',\n          width: '100%',\n          marginBottom: '12px',\n     }\n\n\n}));\n\nconst Search = () => {\n     const classes = useStyles();\n     const dispatch = useDispatch();\n     const selectedPokemon = useSelector(state => state.pokemones.selectedPokemon)\n     // console.log(selectedPokemon);\n\n     // const loading = useSelector(state => state.pokemones.loading)\n     // const error = useSelector(state => state.pokemones.error)\n     // const searchMode = useSelector(state => state.pokemones.searchMode)\n\n     useEffect(() => {\n          const fetchData = () => {\n               dispatch(getPokemonsAction())\n          }\n          fetchData()\n     }, [dispatch])\n\n     return (\n          <Grid\n          className={classes.root}\n          container\n          spacing={0}\n          direction=\"row\"\n          justify=\"space-evenly\"\n          alignItems=\"center\"\n          alignContent=\"center\"\n     //   wrap=\"nowrap\"\n     >\n               {\n\n                              !selectedPokemon.length ?\n                                   <h1>Por favor ingrese un pokemon en el campo de busqueda</h1>\n                                   :\n                                        selectedPokemon.map(item => (\n                                             <Pokemon\n                                                  key={uuid()}\n                                                  name={item.name}\n                                                  image={item.image}\n                                                  id={item.id}\n                                                  data={item.data}\n                                                  types={item.types}\n                                             />\n                                        ))\n                           \n               }\n                   {/* {\n                              searchMode && <Button\n                                   className={classes.Button}\n                                   color=\"default\"\n                                   variant=\"contained\"\n                                   endIcon={<ArrowBackIcon />}\n                                   onClick={() => handleReturn()}\n                              >\n                                   Volver\n                                             </Button>\n                         } */}\n          </Grid>\n     )\n}\n\nexport default Search\n"],"sourceRoot":""}